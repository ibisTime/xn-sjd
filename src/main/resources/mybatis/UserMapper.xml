<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ogc.standard.dao.IUserDAO">
	<resultMap id="user_DB_Result" type="user">
		<result column="user_id" property="userId" />
		<result column="login_name" property="loginName" />
		<result column="mobile" property="mobile" />
		<result column="email" property="email" />
		<result column="kind" property="kind" />
		
		<result column="photo" property="photo" />
		<result column="nickname" property="nickname" />
		<result column="login_pwd_strength" property="loginPwdStrength" />		
		<result column="level" property="level" />		
		<result column="user_referee_type" property="userRefereeType" />
		
		<result column="user_referee" property="userReferee" />
		<result column="agent_id" property="agentId" />
		<result column="friend_count" property="friendCount" />
		<result column="id_kind" property="idKind" />
		<result column="id_no" property="idNo" />
		<result column="real_name" property="realName" />
		
		<result column="trade_pwd_strength" property="tradePwdStrength" />
		<result column="status" property="status" />
		<result column="union_id" property="unionId" />
		<result column="h5_open_id" property="h5OpenId" />
		<result column="province" property="province" />
		
		<result column="city" property="city" />
		<result column="area" property="area" />
		<result column="address" property="address" />
		<result column="longitude" property="longitude" />
		<result column="latitude" property="latitude" />
		
		<result column="create_datetime" property="createDatetime" />
		<result column="updater" property="updater" />
		<result column="update_datetime" property="updateDatetime" />
		<result column="remark" property="remark" />
	</resultMap>
	
	<resultMap id="user_userRank_Result" type="user">
		<result column="user_id" property="userId" />
		<result column="login_name" property="loginName" />
		<result column="mobile" property="mobile" />
		<result column="kind" property="kind" />
		
		<result column="photo" property="photo" />
		<result column="nickname" property="nickname" />
		<result column="level" property="level" />		
		<result column="user_referee_type" property="userRefereeType" />
		
		<result column="user_referee" property="userReferee" />
		<result column="agent_id" property="agentId" />
		<result column="real_name" property="realName" />
		
		<result column="status" property="status" />
		<result column="union_id" property="unionId" />
		<result column="h5_open_id" property="h5OpenId" />
		
		
		<result column="row_no" property="rowNo" />
		<result column="to_user" property="toUser" />
		<result column="certificate_count" property="certificateCount" />
		<result column="tpp_amount" property="tppAmount" />
	</resultMap>
	
	<sql id="where_condition">
		<trim prefix="WHERE" prefixOverrides="AND | OR">			
			<if test="userId != null and userId != '' ">
				AND t.user_id = #{userId}
			</if>
			<if test="kind != null and kind != '' ">
				AND t.kind = #{kind}
			</if>
			<if test="loginName != null and loginName != '' ">
				AND t.login_name = #{loginName}
			</if>
			<if test="loginNameForQuery != null and loginNameForQuery != '' ">
				AND t.login_name like "%"#{loginNameForQuery}"%"
			</if>
			<if test="nickname != null and nickname != '' ">
				AND t.nickname = #{nickname}
			</if>
			<if test="nicknameForQuery != null and nicknameForQuery != '' ">
				AND t.nickname like "%"#{nicknameForQuery}"%"
			</if>
			<if test="level != null and level != '' ">
				AND t.level = #{level}
			</if>	
			<if test="userRefereeType != null and userRefereeType != '' ">
				AND t.user_referee_type = #{userRefereeType}
			</if>
			<if test="userReferee != null and userReferee != '' ">
				AND t.user_referee = #{userReferee}
			</if>	
			<if test="agentId != null and agentId != '' ">
				AND t.agent_id = #{agentId}
			</if>
			<if test="mobile != null and mobile != '' ">
				AND t.mobile = #{mobile}
			</if>
			<if test="email != null and email != '' ">
				AND t.email = #{email}
			</if>
			<if test="mobileForQuery != null and mobileForQuery != '' ">
				AND t.mobile like "%"#{mobileForQuery}"%"
			</if>
			<if test="idKind != null and idKind != '' ">
				AND t.id_kind = #{idKind}
			</if>
			<if test="idNo != null and idNo != '' ">
				AND t.id_no = #{idNo}
			</if>
			<if test="realName != null and realName != '' ">
				AND t.real_name = #{realName}
			</if>
			<if test="realNameForQuery != null and realNameForQuery != '' ">
				AND t.real_name like "%"#{realNameForQuery}"%"
			</if>
			<if test="status != null and status != '' ">
				AND t.status = #{status}
			</if>
			<if test="unionId != null and unionId != '' ">
				AND t.union_id = #{unionId}
			</if>
			<if test="h5OpenId != null and h5OpenId != '' ">
				AND t.h5_open_id = #{h5OpenId}
			</if>
			<if test="updater != null and updater != '' ">
				AND t.updater = #{updater}
			</if>
			<if test="loginPwd != null and loginPwd != '' ">
				AND t.login_pwd = #{loginPwd}
			</if>	
			<if test="tradePwd != null and tradePwd != '' ">
				AND t.trade_pwd = #{tradePwd}
			</if>	
			<if test="province != null and province != '' ">
				AND t.province = #{province}
			</if>
			<if test="provinceForQuery != null and provinceForQuery != '' ">
				AND t.province like "%"#{provinceForQuery}"%"
			</if>
			<if test="city != null and city != '' ">
				AND t.city = #{city}
			</if>
			<if test="cityForQuery != null and cityForQuery != '' ">
				AND t.city like "%"#{cityForQuery}"%"
			</if>
			<if test="area != null and area != '' ">
				AND t.area = #{area}
			</if>
			<if test="areaForQuery != null and areaForQuery != '' ">
				AND t.area like "%"#{areaForQuery}"%"
			</if>
			<if test="createDatetimeStart != null and createDatetimeStart != '' ">
				<![CDATA[AND t.create_datetime >= #{createDatetimeStart}]]>
			</if>
			<if test="createDatetimeEnd != null and createDatetimeEnd != '' ">
				<![CDATA[AND t.create_datetime <= #{createDatetimeEnd}]]>
			</if>
			<if test="userRefereeList != null and userRefereeList.size() != 0 ">
				AND t.userReferee in 
                <foreach item="item" index="index" collection="userRefereeList" open="(" separator="," close=")">
	            	#{item}
                </foreach> 
			</if>
		</trim>
	</sql>
	
	
	<select id="select_user" parameterType="user" resultMap="user_DB_Result">
		SELECT 
		t.user_id
		,t.login_name
		,t.mobile
		,t.email
		,t.kind
		
		,t.photo
		,t.nickname
		,t.login_pwd_strength
		,t.level
		,t.user_referee_type
		,t.user_referee
		
		,t.agent_id
		,t.friend_count
		,t.id_kind
		,t.id_no
		,t.real_name
		
		,t.trade_pwd_strength
		,t.status
		,t.union_id
		,t.h5_open_id
		,t.province
		
		,t.city
		,t.area
		,t.address
		,t.longitude
		,t.latitude
		
		,t.create_datetime
		,t.updater
		,t.update_datetime
		,t.remark
		FROM
		tstd_user t
		<include refid="where_condition"/>
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				${order}
			</if>
		</trim>
	</select>

	<select id="select_user_count" parameterType="user" resultType="java.lang.Long">
		SELECT count(1) FROM tstd_user t 
		<include refid="where_condition"/>
	</select>

	<select id="select_userRank_list" parameterType="user" resultMap="user_userRank_Result">
		select 
        (@rowNO:= @rowNo+1) as row_no,
		t.user_id
		,t.login_name
		,t.mobile
		,t.kind
		
		,t.photo
		,t.nickname
		,t.level
		,t.user_referee_type
		,t.user_referee
		
		,t.agent_id
		,t.real_name
		
		,t.status
		,t.union_id
		,t.h5_open_id,
		
		ifnull((select amount from tstd_account where user_id = t.user_id and currency='TPP') * #{weightRate1}+
		(select sum(amount) from try_adopt_order_tree) * #{weightRate2},0) as weight,
		(select count(*) from try_adopt_order_tree where current_holder = t.user_id) as certificate_count,
		ifnull((select amount from tstd_account where user_id = t.user_id and currency='TPP'),0) tpp_amount
		
		from
		(select * from tstd_user ) t,
        (select @rowNO:=0) b
        
		order by (ifnull((select amount from tstd_account where user_id = t.user_id and currency='TPP') * #{weightRate1}+
		(select sum(amount) from try_adopt_order_tree) * #{weightRate2},0)) desc
	</select>
	
	<select id="select_userRank_count" parameterType="user"
		resultType="java.lang.Long">
		select count(*) from
		(select * from tstd_user ) t,
        (select @rowNO:=0) b
		order by (ifnull((select amount from tstd_account where user_id = t.user_id and currency='TPP') * #{weightRate1}+
		(select sum(amount) from try_adopt_order_tree) * #{weightRate2},0)) desc
	</select>
	
	<insert id="insert_user" parameterType="user">
		INSERT INTO tstd_user(
		user_id
		,login_name
		,mobile
		,email
		,kind
		
		,photo
		,nickname
		,login_pwd
		,login_pwd_strength
		,level
		
		,user_referee_type
		,user_referee
		,agent_id
		,id_kind
		,id_no
		
		,real_name
		,trade_pwd
		,trade_pwd_strength
		,status
		,union_id
		
		,h5_open_id
		,province
		,city
		,area
		,address
		
		,longitude
		,latitude
		,create_datetime
		,updater
		,update_datetime
		
		,remark
		)
		VALUES(
		#{userId}
		,#{loginName}
		,#{mobile}
		,#{email}
		,#{kind}
		
		,#{photo}
		,#{nickname}
		,#{loginPwd}
		,#{loginPwdStrength}
		,#{level}
		
		,#{userRefereeType}
		,#{userReferee}
		,#{agentId}
		,#{idKind}
		,#{idNo}
		
		,#{realName}
		,#{tradePwd}
		,#{tradePwdStrength}
		,#{status}
		,#{unionId}
		
		,#{h5OpenId}
		,#{province}
		,#{city}
		,#{area}
		,#{address}
		
		,#{longitude}
		,#{latitude}
		,#{createDatetime}
		,#{updater}
		,#{updateDatetime}
		
		,#{remark}
		)
	</insert>
	
	<update id="update_userInfo" parameterType="user">
		UPDATE tstd_user
		SET
		nickname = #{nickname}
		,real_name= #{realName}
		,id_kind = #{idKind}
		,id_no = #{idNo}
		WHERE
		user_id = #{userId}	
	</update>
	
	<update id="update_identity" parameterType="user">
		UPDATE tstd_user
		SET
		 real_name= #{realName}
		,id_kind = #{idKind}
		,id_no = #{idNo}
		WHERE
		user_id = #{userId}	
	</update>
	
	<update id="update_referee" parameterType="user">
		UPDATE tstd_user
		SET
		user_referee_type = #{userRefereeType}
		,user_referee = #{userReferee}
		,updater = #{updater}
		,update_datetime = #{updateDatetime}
		WHERE
		user_id = #{userId}	
	</update>
	
	<update id="update_real_name" parameterType="user">
		UPDATE tstd_user
		SET
		real_name= #{realName}
		WHERE
		user_id = #{userId}
	</update>
	
	<update id="update_email" parameterType="user">
		UPDATE tstd_user
		SET
		email= #{email}
		WHERE
		user_id = #{userId}
	</update>
	
	<update id="update_trade_pwd" parameterType="user">
		UPDATE tstd_user
		SET
		 trade_pwd = #{tradePwd}
		,trade_pwd_strength = #{tradePwdStrength}
		WHERE
		user_id = #{userId}	
	</update>
	
	<update id="update_login_pwd" parameterType="user">
		UPDATE tstd_user
		SET
		 login_pwd = #{loginPwd}
		,login_pwd_strength = #{loginPwdStrength}
		WHERE
		user_id = #{userId}	
	</update>	
	
	<update id="update_mobile" parameterType="user">
		UPDATE tstd_user
		SET
		login_name = #{mobile}
		,mobile = #{mobile}
		WHERE
		user_id = #{userId}	
	</update>
	
	<update id="update_bind_mobile" parameterType="user">
		UPDATE tstd_user
		SET
		mobile = #{mobile}
		WHERE
		user_id = #{userId}	
	</update>
	
	<update id="update_status" parameterType="user">
		UPDATE tstd_user
		SET
		status = #{status}
		,updater = #{updater}
		,update_datetime = #{updateDatetime}
		,remark = #{remark}
		WHERE
		user_id = #{userId}	
	</update>
	
	<update id="update_user_loginName" parameterType="user">
		UPDATE tstd_user
		SET
		login_name = #{loginName}
		WHERE
		user_id = #{userId}	
	</update>
	
	<update id="update_user_nickname" parameterType="user">
		UPDATE tstd_user
		SET
		 nickname = #{nickname}
		WHERE
		user_id = #{userId}	
	</update>
	
	<update id="update_user_photo" parameterType="user">
		UPDATE tstd_user
		SET
		photo = #{photo}
		WHERE user_id = #{userId}
	</update>
	
	<update id="update_user" parameterType="user">
		UPDATE tstd_user
		SET
		login_name = #{loginName}
		,mobile = #{mobile}
		,id_kind = #{idKind}
		,id_no = #{idNo}
		,real_name = #{realName}
		
		,updater = #{updater}
		,update_datetime = #{updateDatetime}
		,remark = #{remark}
		,status = #{status}
		WHERE
		user_id = #{userId}	
	</update>
	
	<update id="update_level" parameterType="user">
		UPDATE tstd_user
		SET
		level = #{level}
		WHERE
		user_id = #{userId}		
	</update>
	
	<update id="update_location" parameterType="user">
		UPDATE tstd_user
		SET
		address = #{address}
		,area = #{area}
		,city=#{city}
		,province=#{province}
		,latitude=#{latitude}
		,longitude=#{longitude}
		,updater = #{updater}
		,update_datetime = #{updateDatetime}
		,remark = #{remark}
		WHERE
		user_id = #{userId}		
	</update>
	
	<update id="update_userReferee" parameterType="user">
		UPDATE tstd_user
		SET
		user_referee = #{userReferee}
		WHERE
		user_id = #{userId}		
	</update>
	
	<update id="approve_user" parameterType="user">
		UPDATE tstd_user
		SET
		status = #{status}
		,updater = #{updater}
		,update_datetime = #{updateDatetime}
		,remark = #{remark}
		WHERE
		user_id = #{userId}		
	</update>
	
	<update id="full_user" parameterType="user">
		UPDATE tstd_user
		SET
		real_name = #{realName}
		,id_kind = #{idKind}
		,id_no = #{idNo}
		WHERE
		user_id = #{userId}		
	</update>
	
	<update id="update_wx_info" parameterType="user">
		UPDATE tstd_user
		SET
		union_id =#{unionId}
		,h5_open_id =#{h5OpenId}
		,nickname = #{nickname}
		,photo = #{photo}
		WHERE
		user_id = #{userId}		
	</update>
	
	<update id="update_friendCount" parameterType="user">
		UPDATE tstd_user
		SET
		friend_count =#{friendCount}
		WHERE
		user_id = #{userId}		
	</update>
	
</mapper>

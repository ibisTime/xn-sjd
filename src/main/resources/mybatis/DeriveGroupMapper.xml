<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ogc.standard.dao.IDeriveGroupDAO">
	<resultMap id="deriveGroup_DB_Result" type="deriveGroup">
		<result column="code" property="code" />
		<result column="original_code" property="originalCode" />
		<result column="product_code" property="productCode" />
		<result column="product_name" property="productName" />
		<result column="specs_code" property="specsCode" />
		<result column="specs_name" property="specsName" />
		<result column="variety" property="variety" />
		<result column="type" property="type" />
		
		<result column="price" property="price" />
		<result column="original_quantity" property="originalQuantity" />
		<result column="quantity" property="quantity" />
		<result column="unit" property="unit" />
		<result column="creater" property="creater" />
		<result column="create_datetime" property="createDatetime" />
		
		<result column="status" property="status" />
		<result column="claimant" property="claimant" />
		<result column="claim_datetime" property="claimDatetime" />
		<result column="wave" property="wave" />
		<result column="url" property="url" />
		
		<result column="remark" property="remark" />
	</resultMap>
	
	<sql id="where_condition">
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="code != null and code != '' ">
				AND t.code = #{code}
			</if>
			<if test="originalCode != null and originalCode != '' ">
				AND t.original_code = #{originalCode}
			</if>
			<if test="productCode != null and productCode != '' ">
				AND t.product_code = #{productCode}
			</if>
			<if test="variety != null and variety != '' ">
				AND t.variety = #{variety}
			</if>
			<if test="type != null and type != '' ">
				AND t.type = #{type}
			</if>
			<if test="creater != null and creater != '' ">
				AND t.creater = #{creater}
			</if>
			<if test="status != null and status != '' ">
				AND t.status = #{status}
			</if>
			<if test="claimant != null and claimant != '' ">
				AND t.claimant = #{claimant}
			</if>
			<if test="url != null and url != '' ">
				AND t.url = #{url}
			</if>
			<if test="queryUserId != null and queryUserId != '' ">
				AND t.creater = #{queryUserId} or (t.type = 0 and t.claimant = #{queryUserId})
			</if>
			<if test="minQuantity != null and minQuantity != '' ">
				AND t.quantity > #{minQuantity}
			</if>
			
			<if test="statusList != null and statusList != '' ">
				AND t.status in 
                <foreach item="item" index="index" collection="statusList" open="(" separator="," close=")">
	            	#{item}
                </foreach> 
			</if>
		</trim>
	</sql>
	
	<select id="select_distinctVariety" parameterType="deriveGroup" resultMap="deriveGroup_DB_Result">
		SELECT
		DISTINCT
		t.variety
		FROM
		tys_derive_group t
		<include refid="where_condition" />
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
	</select>
	
	<select id="select_deriveGroup" parameterType="deriveGroup" resultMap="deriveGroup_DB_Result">
		SELECT
		t.code
		,t.original_code
		,t.product_code
		,t.product_name
		,t.specs_code
		,t.specs_name
		,t.variety
		,t.type
		
		,t.price
		,t.original_quantity
		,t.quantity
		,t.unit
		,t.creater
		,t.create_datetime
		
		,t.status
		,t.claimant
		,t.claim_datetime
		,t.wave
		,t.url
		
		,t.remark
		FROM
		tys_derive_group t
		<include refid="where_condition" />
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
	</select>

	<select id="select_deriveGroup_count" parameterType="deriveGroup"
		resultType="java.lang.Long">
		SELECT count(1) FROM tys_derive_group t
		<include refid="where_condition" />
	</select>

	<insert id="insert_deriveGroup" parameterType="deriveGroup">
		INSERT INTO
		tys_derive_group(
		code
		,original_code
		,product_code
		,product_name
		,specs_code
		,specs_name
		,variety
		,type
		
		,price
		,original_quantity
		,quantity
		,unit
		,creater
		,create_datetime
		
		,status
		,claimant
		,wave
		,url
		,remark
		)
		VALUES(
		#{code}
		,#{originalCode}
		,#{productCode}
		,#{productName}
		,#{specsCode}
		,#{specsName}
		,#{variety}
		,#{type}
		
		,#{price}
		,#{originalQuantity}
		,#{quantity}
		,#{unit}
		,#{creater}
		,#{createDatetime}
		
		,#{status}
		,#{claimant}
		,#{wave}
		,#{url}
		,#{remark}
		)
	</insert>

	<update id="update_revockDeriveGroup" parameterType="deriveGroup">
		UPDATE tys_derive_group
		SET
		status = #{status}
		,claimant = #{claimant}
		,claim_datetime = #{claimDatetime}
		,remark = #{remark}
		WHERE code = #{code}
	</update>
	
	<update id="update_claimDirect" parameterType="deriveGroup">
		UPDATE tys_derive_group
		SET
		status = #{status}
		,claim_datetime = #{claimDatetime}
		WHERE code = #{code}
	</update>
	
	<update id="update_rejectDirect" parameterType="deriveGroup">
		UPDATE tys_derive_group
		SET
		status = #{status}
		,claim_datetime = #{claimDatetime}
		,remark = #{remark}
		WHERE code = #{code}
	</update>
	
	<update id="update_claimQr" parameterType="deriveGroup">
		UPDATE tys_derive_group
		SET
		status = #{status}
		,claimant = #{claimant}
		,claim_datetime = #{claimDatetime}
		WHERE code = #{code}
	</update>
	
	<update id="update_claimPublic" parameterType="deriveGroup">
		UPDATE tys_derive_group
		SET
		status = #{status}
		,claimant = #{claimant}
		,claim_datetime = #{claimDatetime}
		WHERE code = #{code}
	</update>
	
	<update id="update_quantity" parameterType="deriveGroup">
		UPDATE tys_derive_group
		SET
		quantity = #{quantity}
		WHERE code = #{code}
	</update>
	
	<update id="update_wave" parameterType="deriveGroup">
		UPDATE tys_derive_group
		SET
		wave = #{wave}
		WHERE code = #{code}
	</update>
</mapper>